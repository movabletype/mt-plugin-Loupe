@import "compass/css3/border-radius";
@import "compass/css3/box-shadow";
@import "compass/css3/box-sizing";
@import "compass/css3/images";
@import "compass/css3/opacity";
@import "compass/css3/transform";
@import "compass/css3/transition";
@import "compass/css3/user-interface";
@import "compass/utilities/general/clearfix";

@import "_sass_grunt_vars";

$default-transition-property: all;
$default-transition-duration: 0.3s;
$default-transition-function: ease;
$default-transition-delay: 0s;

$content-max-width: 450px;
$content-min-width: 320px;

$font-color: #444444;
$font-family: "Helvetica Neue", sans-serif;
$font-size: 100%;

$radius: 0.488rem;

$header-height: 60px;
$header-inner-height: 44px;
$header-padding-top: 7px;

$white: white;
$black: black;
$bg-color: #f6f5f4;
$card-background-color: #f3f3f5;
$card-header-color: #08c1af;
$card-border-color: #c2c3c5;
$card-shadow-color: #a6a7ac;
$btn-basic-color: #8bcd4d;
$btn-attention-color: #e94e1c;
$btn-disabled-color: #999999;
$count-background-color: #ebcf00;
$count-background-blue: #47cdec;
$card-arrow: lighten($black, 75%);

@mixin hardware-accelerate-hack {
  -webkit-transform: translate3d(0, 0, 0);
}

@mixin scroll-as-native {
  -webkit-overflow-scrolling: touch;
}

@mixin transition-header {
  @include single-transition($property: all, $duration: 0.3s, $function: ease);
}

@mixin transition-shadow-header {
  @include single-transition($property: box-shadow, $duration: 0.3s, $function: ease);
}

@mixin border-radius-with-pie($radius: $default-border-radius, $vertical-radius: false) {
  @include border-radius($radius, $vertical-radius);
  behavior: url($pathToPIE);
}

@mixin numeric-font {
  font-family: 'LeagueGothicRegular','Helvetica Neue',sans-serif;
  font-weight: normal;
}

@mixin position-zero {
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  position: absolute;
}

@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

@function normalize-fontsize($size) {
  $unit: unit($size);
  $size: strip-unit($size);
  @if $unit == px {
    $size: $size;
  }
  @else if $unit == "%" {
    $size: $size / 100 * 16;
  }
  @else {
    $size: $size * 16;
  }
  @return ceil($size);
}

@function is-min-max-width-height($prop) {
  $bool: false;
  @if $prop == "max-width" {
    $bool: true;
  }
  @else if $prop == "max-height" {
    $bool: true;
  }
  @else if $prop == "min-width" {
    $bool: true;
  }
  @else if $prop == "min-height" {
    $bool: true;
  }
  @return $bool;
}

// rem with fallback for ie8
// this mixin is cloned from
// http://css-tricks.com/snippets/css/less-mixin-for-rem-font-sizing/
// adding my min/max-width ie8 issue fixes
@mixin rem($property, $values...) {
  $max: length($values);
  $pxValues: ();
  $remValues: ();
  @if is-min-max-width-height($property) {
    // calicurate min/max width to fit ie8 content-box.
    $value: strip-unit(nth($values, 1));
    $px: round($value * normalize-fontsize($font-size));
    $rem: $value;
    @for $i from 2 through $max {
      $minus: normalize-fontsize(nth($values, $i));
      $px: $px - $minus;
    }
    @if $px < 1 {
      $pxValues: 0;
    }
    @else {
      $pxValues: #{$px}px;
    }
    $remValues: #{$rem}rem;
  }
  @else {
    @for $i from 1 through $max {
      $value: strip-unit(nth($values, $i));
      $px: round($value * normalize-fontsize($font-size));
      $rem: $value;
      @if $px == 0 {
        $px: 0;
      }
      @else {
        $px: #{$px}px;
      }
      $pxValues: append($pxValues, $px);
      @if $rem == 0 {
        $rem: 0;
      }
      @else {
        $rem: #{$rem}rem;
      }
      $remValues: append($remValues, $rem);
    }
  }
  #{$property}: $pxValues;
  #{$property}: $remValues;
}